import Foundation

/// Tuning will be generated by this setting paramters.
/// - `let pitch: Base pitch.`
/// - `let scaleType: Scale type for harmony.`
/// - `let rootTone: Root tone.`
/// - `let transpositionTone: Transposition tone.`
/// - `let octaveRange: Octave range indicated by integer.`
public struct Setting {
    public var pitch: Float
    public var scaleType: ScaleType
    public var rootTone: Tone
    public var transpositionTone: Tone
    public var octaveRange: CountableRange<Int>
    
    public init(
        pitch: Float,
        scaleType: ScaleType,
        rootTone: Tone,
        transpositionTone: Tone,
        octaveRange: CountableRange<Int>
        ) {
        self.pitch = pitch
        self.scaleType = scaleType
        self.rootTone = rootTone
        self.transpositionTone = transpositionTone
        self.octaveRange = octaveRange
    }
}

extension Setting: CustomStringConvertible {
    public var description: String {
        return "pitch => \(pitch), scaleType => \(scaleType), rootSound => \(rootTone.rawValue), transpositionTone => \(transpositionTone)"
    }
}
